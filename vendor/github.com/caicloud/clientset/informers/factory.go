/*
Copyright 2017 caicloud authors. All rights reserved.
*/

// This file was automatically generated by informer-gen

package informers

import (
	apiextensions "github.com/caicloud/clientset/informers/apiextensions"
	config "github.com/caicloud/clientset/informers/config"
	loadbalance "github.com/caicloud/clientset/informers/loadbalance"
	release "github.com/caicloud/clientset/informers/release"
	resource "github.com/caicloud/clientset/informers/resource"
	kubernetes "github.com/caicloud/clientset/kubernetes"
	informers "k8s.io/client-go/informers"
	time "time"
)

type sharedInformerFactory struct {
	informers.SharedInformerFactory
}

// NewSharedInformerFactory constructs a new instance of sharedInformerFactory
func NewSharedInformerFactory(client kubernetes.Interface, defaultResync time.Duration) SharedInformerFactory {
	return &sharedInformerFactory{
		informers.NewSharedInformerFactory(client, defaultResync),
	}
}

// SharedInformerFactory provides shared informers for resources in all known
// API group versions.
type SharedInformerFactory interface {
	informers.SharedInformerFactory

	Apiextensions() apiextensions.Interface
	Config() config.Interface
	Loadbalance() loadbalance.Interface
	Release() release.Interface
	Resource() resource.Interface
}

func (f *sharedInformerFactory) Apiextensions() apiextensions.Interface {
	return apiextensions.New(f)
}

func (f *sharedInformerFactory) Config() config.Interface {
	return config.New(f)
}

func (f *sharedInformerFactory) Loadbalance() loadbalance.Interface {
	return loadbalance.New(f)
}

func (f *sharedInformerFactory) Release() release.Interface {
	return release.New(f)
}

func (f *sharedInformerFactory) Resource() resource.Interface {
	return resource.New(f)
}
