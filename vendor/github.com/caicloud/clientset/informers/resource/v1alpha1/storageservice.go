/*
Copyright 2017 caicloud authors. All rights reserved.
*/

// This file was automatically generated by informer-gen

package v1alpha1

import (
	kubernetes "github.com/caicloud/clientset/kubernetes"
	v1alpha1 "github.com/caicloud/clientset/listers/resource/v1alpha1"
	resource_v1alpha1 "github.com/caicloud/clientset/pkg/apis/resource/v1alpha1"
	v1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	runtime "k8s.io/apimachinery/pkg/runtime"
	watch "k8s.io/apimachinery/pkg/watch"
	internalinterfaces "k8s.io/client-go/informers/internalinterfaces"
	client_go_kubernetes "k8s.io/client-go/kubernetes"
	cache "k8s.io/client-go/tools/cache"
	time "time"
)

// StorageServiceInformer provides access to a shared informer and lister for
// StorageServices.
type StorageServiceInformer interface {
	Informer() cache.SharedIndexInformer
	Lister() v1alpha1.StorageServiceLister
}

type storageServiceInformer struct {
	factory internalinterfaces.SharedInformerFactory
}

func newStorageServiceInformer(client kubernetes.Interface, resyncPeriod time.Duration) cache.SharedIndexInformer {
	sharedIndexInformer := cache.NewSharedIndexInformer(
		&cache.ListWatch{
			ListFunc: func(options v1.ListOptions) (runtime.Object, error) {
				return client.ResourceV1alpha1().StorageServices().List(options)
			},
			WatchFunc: func(options v1.ListOptions) (watch.Interface, error) {
				return client.ResourceV1alpha1().StorageServices().Watch(options)
			},
		},
		&resource_v1alpha1.StorageService{},
		resyncPeriod,
		cache.Indexers{cache.NamespaceIndex: cache.MetaNamespaceIndexFunc},
	)

	return sharedIndexInformer
}

func (f *storageServiceInformer) Informer() cache.SharedIndexInformer {
	return f.factory.InformerFor(&resource_v1alpha1.StorageService{}, func(client client_go_kubernetes.Interface, resyncPeriod time.Duration) cache.SharedIndexInformer {
		// panic if client is not *kubernetes.Clientset
		return newStorageServiceInformer(client.(kubernetes.Interface), resyncPeriod)
	})
}

func (f *storageServiceInformer) Lister() v1alpha1.StorageServiceLister {
	return v1alpha1.NewStorageServiceLister(f.Informer().GetIndexer())
}
